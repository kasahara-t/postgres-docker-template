name: postgres-docker-template

services:
  postgres:
    build:
      context: ./.docker/postgres
      dockerfile: Dockerfile
      args:
        - DB_LANG=${POSTGRES_LOCALE}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    configs:
      - source: postgres_conf
        target: /etc/postgresql/postgresql.conf
    secrets:
      - postgres_database
      - postgres_user
      - postgres_password
    environment:
      - PGPORT=$POSTGRES_PORT
      - POSTGRES_DB_FILE=/run/secrets/postgres_database
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    healthcheck:
      test: >
        pg_isready
        -h 127.0.0.1
        -p ${POSTGRES_PORT}
        -d `cat /run/secrets/postgres_database`
        -U `cat /run/secrets/postgres_user`
        || exit 1
      interval: 2s
      timeout: 5s
      retries: 10
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - pgadmin-tier
      - migrator-tier

  migrator:
    build:
      context: ./.docker/migrator
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DATABASE_FILE: /run/secrets/postgres_database
    secrets:
      - postgres_user
      - postgres_password
      - postgres_database
    networks:
      - migrator-tier
    depends_on:
      postgres:
        condition: service_healthy

  pgadmin:
    build:
      context: ./.docker/pgadmin
      dockerfile: Dockerfile
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    secrets:
      - postgres_database
      - postgres_user
      - postgres_password
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=$POSTGRES_PORT
      - PGADMIN_DEFAULT_EMAIL=$PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    healthcheck:
      test: wget -O - http://localhost:80/misc/ping
      interval: 2s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - pgadmin-tier
    depends_on:
      postgres:
        condition: service_healthy
          
configs:
  postgres_conf:
    file: ./.docker/postgres/postgresql.conf

secrets:
  postgres_database:
    file: ./.docker/postgres/secrets/database.txt
  postgres_user:
    file: ./.docker/postgres/secrets/user.txt
  postgres_password:
    file: ./.docker/postgres/secrets/password.txt

volumes:
  postgres-data: {}
  pgadmin-data: {}

networks:
  pgadmin-tier: {}
  migrator-tier: {}